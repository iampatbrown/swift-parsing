{"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"},"metadata":{"roleHeading":"Framework","modules":[{"name":"Parsing"}],"role":"collection","title":"Parsing","symbolKind":"module","externalID":"Parsing"},"kind":"symbol","abstract":[{"type":"text","text":"No overview available."}],"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[[]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","title":"Fail","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"url":"\/documentation\/parsing\/fail","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"kind":"symbol","title":"Rest","url":"\/documentation\/parsing\/rest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","abstract":[{"text":"A parser that consumes everything to the end of the collection and returns it as its output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","title":"AnyParser","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"url":"\/documentation\/parsing\/anyparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","title":"Whitespace","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","title":"OneOfMany","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"url":"\/documentation\/parsing\/oneofmany"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"title":"Many","navigatorTitle":[{"kind":"identifier","text":"Many"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","type":"topic","role":"symbol","url":"\/documentation\/parsing\/many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"title":"First","navigatorTitle":[{"kind":"identifier","text":"First"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","type":"topic","role":"symbol","url":"\/documentation\/parsing\/first","abstract":[{"text":"A parser that consumes the first element from a collection. Fails on an empty collection.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"url":"\/documentation\/parsing\/prefixupto","role":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"type":"topic","kind":"symbol","title":"PrefixUpTo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"kind":"symbol","title":"PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","title":"StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"url":"\/documentation\/parsing\/startswith","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"title":"Conditional","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"type":"topic","url":"\/documentation\/parsing\/conditional","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","title":"FirstWhere","navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"url":"\/documentation\/parsing\/firstwhere","abstract":[],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"type":"topic","title":"End","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/end","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","navigatorTitle":[{"kind":"identifier","text":"Skip"}],"url":"\/documentation\/parsing\/skip","abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","title":"Always","navigatorTitle":[{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","abstract":[{"type":"text","text":"A parser that always succeeds by returning the provided value, but does not consume any of its"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"title":"Newline","kind":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input. It will consume both","type":"text"},{"text":" ","type":"text"},{"text":"line feeds (","type":"text"},{"code":"\"\\n\"","type":"codeVoice"},{"text":") and carriage returns with line feeds (","type":"text"},{"code":"\"\\r\\n\"","type":"codeVoice"},{"text":").","type":"text"}],"url":"\/documentation\/parsing\/newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"title":"Lazy","abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"code":"parse","type":"codeVoice"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"url":"\/documentation\/parsing\/lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"}}}