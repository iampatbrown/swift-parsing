{"variants":[{"paths":["\/documentation\/parsing\/newline\/parse(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":2},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"metadata":{"role":"symbol","externalID":"s:7Parsing7NewlineV5parseyytSgxzF","symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":"?","kind":"text"}]}]},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"A more well-structured value parsed from the given input, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A nebulous piece of data to be parsed.","type":"text"}]}],"name":"input"}]}],"kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Newline/parse(_:)":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/parse(_:)","role":"symbol","url":"\/documentation\/parsing\/newline\/parse(_:)","title":"parse(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":"?"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"title":"Newline","kind":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input. It will consume both","type":"text"},{"text":" ","type":"text"},{"text":"line feeds (","type":"text"},{"code":"\"\\n\"","type":"codeVoice"},{"text":") and carriage returns with line feeds (","type":"text"},{"code":"\"\\r\\n\"","type":"codeVoice"},{"text":").","type":"text"}],"url":"\/documentation\/parsing\/newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","role":"symbol"}}}