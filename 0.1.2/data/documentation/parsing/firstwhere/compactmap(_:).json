{"kind":"symbol","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"sections":[],"schemaVersion":{"minor":2,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/parsing\/firstwhere\/compactmap(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"compactMap(_:)","roleHeading":"Instance Method","extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE10compactMapyAA7ParsersO07CompactD0Vy_xqd__Gqd__Sg6OutputQzclF::SYNTHESIZED::s:7Parsing10FirstWhereV","symbolKind":"method","modules":[{"name":"Parsing"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compactMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"text":"CompactMap","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"text":"A parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" result of calling the given transformation","type":"text"},{"text":" ","type":"text"},{"text":"with the output of this parser.","type":"text"}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A closure that accepts output of this parser as its argument and","type":"text"},{"text":" ","type":"text"},{"text":"returns an optional value.","type":"text"}],"type":"paragraph"}],"name":"transform"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is similar to "},{"code":"Sequence.compactMap","type":"codeVoice"},{"type":"text","text":" in the Swift standard library, as well as"},{"type":"text","text":" "},{"code":"Publisher.compactMap","type":"codeVoice"},{"type":"text","text":" in the Combine framework."}]},{"type":"codeListing","syntax":null,"code":["let evenParser = Int.parser().compactMap { $0.isMultiple(of: 2) }","var input = \"124 hello world\"[...].utf8","let output = evenParser.parse(&input) \/\/ 124","input \/\/ \" hello world\""]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere\/Parser-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere\/compactMap(_:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","title":"FirstWhere","navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"url":"\/documentation\/parsing\/firstwhere","abstract":[],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"type":"topic","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given transformation with the"},{"type":"text","text":" "},{"type":"text","text":"output of its upstream parser."}],"navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"kind":"symbol","title":"Parsers.CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere/compactMap(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere\/compactMap(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/firstwhere\/compactmap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"kind":"symbol","role":"symbol","title":"compactMap(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere/Parser-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","type":"topic","title":"Parser Implementations","url":"\/documentation\/parsing\/firstwhere\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"}}}