{"metadata":{"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol","externalID":"s:7Parsing6ParserP","roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"modules":[{"name":"Parsing"}],"title":"Parser","symbolKind":"protocol"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value.","type":"text"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output"],"title":"Associated Types"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr"],"title":"Instance Methods"}],"schemaVersion":{"minor":2,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"platforms":["Linux"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"A parser attempts to parse a nebulous piece of data, represented by the ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" associated type,","type":"text"},{"text":" ","type":"text"},{"text":"into something more well-structured, represented by the ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" associated type. The parser","type":"text"},{"text":" ","type":"text"},{"text":"implements the ","type":"text"},{"type":"codeVoice","code":"parse"},{"text":" method, which is handed an ","type":"text"},{"type":"codeVoice","code":"inout Input"},{"text":", and its job is to turn this","type":"text"},{"text":" ","type":"text"},{"text":"into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" if possible, or otherwise return ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it cannot, which represents a parsing","type":"text"},{"text":" ","type":"text"},{"text":"failure.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The argument of the ","type":"text"},{"code":"parse","type":"codeVoice"},{"text":" function is ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":" because a parser will usually consume some of","type":"text"},{"text":" ","type":"text"},{"text":"the input in order to produce an output. For example, we can use the ","type":"text"},{"code":"Int.parser()","type":"codeVoice"},{"text":" parser to","type":"text"},{"text":" ","type":"text"},{"text":"extract an integer from the beginning of a ","type":"text"},{"code":"UTF8View","type":"codeVoice"},{"text":" and consume that portion of the string:","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["var input = \"123 Hello world\"[...].utf8","let output = Int.parser.parse(&input)","precondition(output == 123)","precondition(input.elementsEqual(\" Hello world\"[...].utf8))"]},{"inlineContent":[{"text":"It is best practice for a parser to ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" consume any of the input if it fails to produce an","type":"text"},{"text":" ","type":"text"},{"text":"output. This allows for “backtracking”, which means if a parser fails then another parser can","type":"text"},{"text":" ","type":"text"},{"text":"try on the original input.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UnicodeScalarViewToUTF8View":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UnicodeScalarViewToUTF8View","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/unicodescalarviewtoutf8view","title":"Parsers.UnicodeScalarViewToUTF8View","navigatorTitle":[{"text":"UnicodeScalarViewToUTF8View","kind":"identifier"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","title":"flatMap(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewParser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","title":"Fail","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"url":"\/documentation\/parsing\/fail","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","title":"Whitespace","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"kind":"symbol","title":"PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"title":"Conditional","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conditional"}],"type":"topic","url":"\/documentation\/parsing\/conditional","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","navigatorTitle":[{"kind":"identifier","text":"Conditional"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-1fw8y":{"title":"take(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, taking only the output of the"},{"type":"text","text":" "},{"type":"text","text":"given parser."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","type":"topic","url":"\/documentation\/parsing\/parser\/take(_:)-1fw8y","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"SkipFirst","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO9SkipFirstV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"abstract":[{"type":"text","text":"A parser that transforms the output of another parser with a given closure."}],"title":"Parsers.Map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"type":"topic","url":"\/documentation\/parsing\/parsers\/map","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"title":"Parsers.Take2","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Take2"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take2"}],"url":"\/documentation\/parsing\/parsers\/take2","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"url":"\/documentation\/parsing\/prefixupto","role":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"type":"topic","kind":"symbol","title":"PrefixUpTo","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond":{"navigatorTitle":[{"kind":"identifier","text":"SkipSecond"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that runs two parsers, one after the other, taking only the output of the first"},{"type":"text","text":" "},{"type":"text","text":"parser."}],"url":"\/documentation\/parsing\/parsers\/skipsecond","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","type":"topic","title":"Parsers.SkipSecond","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SkipSecond"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"title":"Parsers.Stream","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Stream"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"url":"\/documentation\/parsing\/parsers\/stream","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/ignoreOutput()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a parser that discards the output of this parser by returning "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" instead."}],"title":"ignoreOutput()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","url":"\/documentation\/parsing\/parser\/ignoreoutput()","type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUTF8View":{"navigatorTitle":[{"text":"SubstringToUTF8View","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","title":"Parsers.SubstringToUTF8View","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToUTF8View","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringtoutf8view"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-4u8o0":{"type":"topic","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-4u8o0","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"kind":"symbol","defaultImplementations":4,"required":true,"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","title":"StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"url":"\/documentation\/parsing\/startswith","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"title":"First","navigatorTitle":[{"kind":"identifier","text":"First"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","type":"topic","role":"symbol","url":"\/documentation\/parsing\/first","abstract":[{"text":"A parser that consumes the first element from a collection. Fails on an empty collection.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringDoubleParser":{"navigatorTitle":[{"text":"SubstringDoubleParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","title":"Parsers.SubstringDoubleParser","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringDoubleParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringdoubleparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUnicodeScalars":{"abstract":[],"url":"\/documentation\/parsing\/parsers\/substringtounicodescalars","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","title":"Parsers.SubstringToUnicodeScalars","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToUnicodeScalars"}],"navigatorTitle":[{"kind":"identifier","text":"SubstringToUnicodeScalars"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"type":"topic","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}],"kind":"symbol","title":"Parsers.BoolParser","url":"\/documentation\/parsing\/parsers\/boolparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"title":"Lazy","abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"code":"parse","type":"codeVoice"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"url":"\/documentation\/parsing\/lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take3":{"title":"Parsers.Take3","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take3","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","navigatorTitle":[{"text":"Take3","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/take3","kind":"symbol","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalParser"}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/optionalparser","title":"Parsers.OptionalParser","navigatorTitle":[{"kind":"identifier","text":"OptionalParser"}],"abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"kind":"symbol","title":"Rest","url":"\/documentation\/parsing\/rest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Rest"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","abstract":[{"text":"A parser that consumes everything to the end of the collection and returns it as its output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-6e25a":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a","url":"\/documentation\/parsing\/parser\/utf8-6e25a","abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a parser on ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubstringToUTF8View","preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","role":"symbol","title":"utf8"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser":{"title":"Parsers.SubstringBoolParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringBoolParser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","navigatorTitle":[{"text":"SubstringBoolParser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/substringboolparser","kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a substring."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipFirst":{"navigatorTitle":[{"text":"SkipFirst","kind":"identifier"}],"title":"Parsers.SkipFirst","kind":"symbol","abstract":[{"text":"A parser that runs two parsers, one after the other, taking only the output of the second","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/skipfirst","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SkipFirst","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Float80Parser":{"title":"Parsers.Float80Parser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Float80Parser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","navigatorTitle":[{"text":"Float80Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/float80parser","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"title":"Newline","kind":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input. It will consume both","type":"text"},{"text":" ","type":"text"},{"text":"line feeds (","type":"text"},{"code":"\"\\n\"","type":"codeVoice"},{"text":") and carriage returns with line feeds (","type":"text"},{"code":"\"\\r\\n\"","type":"codeVoice"},{"text":").","type":"text"}],"url":"\/documentation\/parsing\/newline","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/compactMap(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CompactMap","preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">"}],"kind":"symbol","role":"symbol","title":"compactMap(_:)","url":"\/documentation\/parsing\/parser\/compactmap(_:)","abstract":[{"type":"text","text":"Returns a parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Output":{"role":"symbol","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Output","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output","kind":"symbol","title":"Output","url":"\/documentation\/parsing\/parser\/output","type":"topic","abstract":[{"text":"The kind of values parsed by this parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"navigatorTitle":[{"kind":"identifier","text":"Filter"}],"title":"Parsers.Filter","kind":"symbol","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"url":"\/documentation\/parsing\/parsers\/filter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Filter"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"type":"topic","title":"End","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"url":"\/documentation\/parsing\/end","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pullback(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pullback","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s15WritableKeyPathC"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/pullback(_:)","type":"topic","kind":"symbol","role":"symbol","title":"pullback(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"title":"Parsers.FloatParser","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatParser"}],"url":"\/documentation\/parsing\/parsers\/floatparser","navigatorTitle":[{"kind":"identifier","text":"FloatParser"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloat80Parser":{"title":"Parsers.SubstringFloat80Parser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloat80Parser","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","navigatorTitle":[{"text":"SubstringFloat80Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/substringfloat80parser","kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-6f1jr":{"title":"take(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning both outputs in a"},{"type":"text","text":" "},{"text":"tuple.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-6f1jr","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V","text":"Take2"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/DoubleParser":{"title":"Parsers.DoubleParser","type":"topic","url":"\/documentation\/parsing\/parsers\/doubleparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleParser"}],"role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"DoubleParser"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","title":"OneOfMany","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"url":"\/documentation\/parsing\/oneofmany"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3thpr":{"title":"take(_:)","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take4","preciseIdentifier":"s:7Parsing7ParsersO5Take4V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","url":"\/documentation\/parsing\/parser\/take(_:)-3thpr","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/orElse(_:)":{"kind":"symbol","title":"orElse(_:)","url":"\/documentation\/parsing\/parser\/orelse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"orElse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OneOf","preciseIdentifier":"s:7Parsing7ParsersO5OneOfV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3ezb3":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take3","preciseIdentifier":"s:7Parsing7ParsersO5Take3V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"take(_:)","kind":"symbol","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","url":"\/documentation\/parsing\/parser\/take(_:)-3ezb3"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringIntParser":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringIntParser"}],"title":"Parsers.SubstringIntParser","url":"\/documentation\/parsing\/parsers\/substringintparser","type":"topic","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"type":"codeVoice","code":"+"},{"type":"text","text":" or "},{"type":"codeVoice","code":"-"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a substring using a UTF-8 parser."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringIntParser"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","title":"Skip","navigatorTitle":[{"kind":"identifier","text":"Skip"}],"url":"\/documentation\/parsing\/skip","abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/filter(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","title":"filter(_:)","url":"\/documentation\/parsing\/parser\/filter(_:)","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take5":{"navigatorTitle":[{"text":"Take5","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","title":"Parsers.Take5","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take5","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take5"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/stream":{"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","kind":"symbol","title":"stream","url":"\/documentation\/parsing\/parser\/stream","type":"topic","abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"title":"Parsers.Pipe","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/pipe","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take4":{"navigatorTitle":[{"kind":"identifier","text":"Take4"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","title":"Parsers.Take4","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take4"}],"url":"\/documentation\/parsing\/parsers\/take4"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"title":"Many","navigatorTitle":[{"kind":"identifier","text":"Many"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","type":"topic","role":"symbol","url":"\/documentation\/parsing\/many","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FlatMap","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","url":"\/documentation\/parsing\/parsers\/flatmap","role":"symbol","navigatorTitle":[{"text":"FlatMap","kind":"identifier"}],"type":"topic","title":"Parsers.FlatMap","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"title":"Parsers.Pullback","abstract":[{"text":"Transforms the ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pullback"}],"url":"\/documentation\/parsing\/parsers\/pullback","navigatorTitle":[{"kind":"identifier","text":"Pullback"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/eraseToAnyParser()":{"url":"\/documentation\/parsing\/parser\/erasetoanyparser()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","role":"symbol","kind":"symbol","type":"topic","title":"eraseToAnyParser()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/skip(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"skip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SkipSecond","preciseIdentifier":"s:7Parsing7ParsersO10SkipSecondV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","kind":"symbol","title":"skip(_:)","url":"\/documentation\/parsing\/parser\/skip(_:)","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, taking only the output of this","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5qnt6":{"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"title":"take(_:)","kind":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-5qnt6","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take5","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take5V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","kind":"symbol","title":"map(_:)","url":"\/documentation\/parsing\/parser\/map(_:)","type":"topic","abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"type":"codeVoice","code":"+"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"-"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"text":"beginning of a collection of UTF8 code units.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","title":"Parsers.IntParser","url":"\/documentation\/parsing\/parsers\/intparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","title":"Always","navigatorTitle":[{"kind":"identifier","text":"Always"}],"url":"\/documentation\/parsing\/always","abstract":[{"type":"text","text":"A parser that always succeeds by returning the provided value, but does not consume any of its"},{"type":"text","text":" "},{"type":"text","text":"input."}],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Input":{"kind":"symbol","title":"Input","url":"\/documentation\/parsing\/parser\/input","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"role":"symbol","required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","abstract":[{"type":"text","text":"The kind of values this parser receives."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pipe(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","kind":"symbol","title":"pipe(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pipe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Downstream"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","kind":"typeIdentifier","text":"Pipe"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/parsing\/parser\/pipe(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","title":"FirstWhere","navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"url":"\/documentation\/parsing\/firstwhere","abstract":[],"kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"type":"topic","abstract":[{"type":"text","text":"A parser that outputs the non-"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" results of calling the given transformation with the"},{"type":"text","text":" "},{"type":"text","text":"output of its upstream parser."}],"navigatorTitle":[{"kind":"identifier","text":"CompactMap"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CompactMap"}],"kind":"symbol","title":"Parsers.CompactMap","url":"\/documentation\/parsing\/parsers\/compactmap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloatParser":{"navigatorTitle":[{"text":"SubstringFloatParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","title":"Parsers.SubstringFloatParser","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloatParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringfloatparser"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","title":"AnyParser","abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"url":"\/documentation\/parsing\/anyparser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOf":{"navigatorTitle":[{"kind":"identifier","text":"OneOf"}],"title":"Parsers.OneOf","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/parsers\/oneof","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/unicodeScalars":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalars","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubstringToUnicodeScalars","preciseIdentifier":"s:7Parsing7ParsersO25SubstringToUnicodeScalarsV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","kind":"symbol","title":"unicodeScalars","url":"\/documentation\/parsing\/parser\/unicodescalars","type":"topic","abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-1tosc":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"UnicodeScalarViewToUTF8View","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO023UnicodeScalarViewToUTF8E0V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"utf8","url":"\/documentation\/parsing\/parser\/utf8-1tosc","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","type":"topic","kind":"symbol","role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"text":" into a parser on","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}]}}}