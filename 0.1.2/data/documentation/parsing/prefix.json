{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","kind":"typeIdentifier","preciseIdentifier":"s:Sl"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This parser can be configured with minimum and maximum lengths, as well as a predicate.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, to parse as many numbers off the beginning of a substring:"}],"type":"paragraph"},{"code":["var input = \"123 hello world\"[...]","Prefix { $0.isNumber }.parse(&input) \/\/ \"123\"","input \/\/ \" Hello world\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If you wanted this parser to fail if "},{"type":"emphasis","inlineContent":[{"text":"no","type":"text"}]},{"type":"text","text":" numbers are consumed, you could introduce a minimum"},{"type":"text","text":" "},{"type":"text","text":"length."}],"type":"paragraph"},{"code":["var input = \"No numbers here\"[...]","Prefix(1...) { $0.isNumber }).parse(&input) \/\/ nil","input \/\/ \"No numbers here\""],"syntax":null,"type":"codeListing"},{"inlineContent":[{"type":"text","text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and"},{"type":"text","text":" "},{"type":"text","text":"maximum lengths provided:"}],"type":"paragraph"},{"code":["var input = \"Lorem ipsum dolor\"[...]","Prefix(2).parse(&input) \/\/ \"Lo\"","input \/\/ \"rem ipsum dolor\""],"syntax":null,"type":"codeListing"}]}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"schemaVersion":{"patch":0,"minor":2,"major":0},"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"title":"Prefix","role":"symbol","roleHeading":"Structure","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6PrefixV"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate"],"title":"Instance Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/prefix"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/Parser-Implementations":{"title":"Parser Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/prefix\/parser-implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(minLength:maxLength:while:)":{"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)","title":"init(minLength:maxLength:while:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/maxLength":{"title":"maxLength","type":"topic","url":"\/documentation\/parsing\/prefix\/maxlength","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/maxLength"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-4n2mo":{"title":"init(_:while:)","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4n2mo","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-4n2mo"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/predicate":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"predicate","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"predicate","url":"\/documentation\/parsing\/prefix\/predicate","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/predicate"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"title":"init(_:while:)","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-ljcs":{"title":"init(_:while:)","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-ljcs","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-ljcs"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/parse(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/parse(_:)","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"type":"topic","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?)"}],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","title":"init(_:while:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/minLength":{"title":"minLength","type":"topic","url":"\/documentation\/parsing\/prefix\/minlength","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/minLength"}}}