{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"title":"Conforms To","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Parser-Implementations"],"title":"Default Implementations","generated":true}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/whitespace"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"role":"symbol","title":"Whitespace","externalID":"s:7Parsing10WhitespaceV"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"UTF8","preciseIdentifier":"s:s4UTF8a"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/init()":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/init()","role":"symbol","url":"\/documentation\/parsing\/whitespace\/init()","title":"init()","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value into an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"url":"\/documentation\/parsing\/parser","navigatorTitle":[{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/parse(_:)":{"url":"\/documentation\/parsing\/whitespace\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/parse(_:)","kind":"symbol","type":"topic","title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"abstract":[{"text":"A parser that consumes all ASCII whitespace from the beginning of the input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","title":"Whitespace","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Parser-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Parser-Implementations","url":"\/documentation\/parsing\/whitespace\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","kind":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","url":"\/documentation\/parsing","role":"collection"}}}