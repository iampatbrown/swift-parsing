{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parser\/parse(_:)-76tcw"]}],"kind":"symbol","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"defaultImplementationsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-717qw","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq"],"title":"Parser Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw"},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"required":true,"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"Parsing"}],"title":"parse(_:)","externalID":"s:7Parsing6ParserP5parsey6OutputQz5InputQzzKF"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A more well-structured value parsed from the given input."}]}],"kind":"content"},{"parameters":[{"name":"input","content":[{"inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally parsed."}],"type":"paragraph"}]}],"kind":"parameters"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-6h1d0":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Parse a collection into an output using a parser that works on the collectionâ€™s "},{"type":"codeVoice","code":"SubSequence"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"This method is more ergnomic to use than ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference"},{"text":" because it accepts a","type":"text"},{"text":" ","type":"text"},{"text":"collection directly rather than its subsequence, and the input does not need to be ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-6h1d0","title":"parse(_:)","url":"\/documentation\/parsing\/parser\/parse(_:)-6h1d0"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-2wzcq":{"abstract":[{"text":"Parse a ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" into an output using a UTF-8 parser. This method is more ergnomic to use","type":"text"},{"text":" ","type":"text"},{"text":"than ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference"},{"text":" because it accepts a plain string rather than a collection of","type":"text"},{"text":" ","type":"text"},{"text":"UTF-8 code units, and the input does not need to be ","type":"text"},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/parsing\/parser\/parse(_:)-2wzcq","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-2wzcq","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"role":"symbol","title":"parse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"type":"topic","url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-76tcw":{"role":"symbol","required":true,"defaultImplementations":3,"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"title":"parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"url":"\/documentation\/parsing\/parser\/parse(_:)-76tcw","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-717qw":{"url":"\/documentation\/parsing\/parser\/parse(_:)-717qw","type":"topic","title":"parse(_:)","kind":"symbol","abstract":[{"text":"Parse an input value into an output. This method is more ergonomic to use than","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-76tcw","type":"reference"},{"text":" because the input does not need to be inout.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-717qw"}}}