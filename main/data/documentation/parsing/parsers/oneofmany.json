{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations"],"generated":true}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/oneofmany"]}],"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Parsers"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","text":"Parser"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually loop"},{"type":"text","text":" "},{"type":"text","text":"over each parser in a builder block:"}]},{"syntax":"swift","code":["enum Role: String, CaseIterable {","  case admin","  case guest","  case member","}","","let roleParser = OneOf {","  for role in Role.allCases {","    status.rawValue.map { role }","  }","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Structure","title":"Parsers.OneOfMany","extendedModule":"Parsing","symbolKind":"struct","externalID":"s:7Parsing7ParsersO9OneOfManyV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"modules":[{"name":"Parsing"}],"navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"role":"symbol"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","interfaceLanguage":"swift"},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parse(_:)":{"role":"symbol","title":"parse(_:)","url":"\/documentation\/parsing\/parsers\/oneofmany\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/ParserPrinter-Implementations":{"kind":"article","abstract":[],"title":"ParserPrinter Implementations","type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"type":"topic","url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parsers":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"parsers","kind":"symbol","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parsers\/oneofmany\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/init(_:)":{"title":"init(_:)","role":"symbol","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/oneofmany\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"kind":"symbol","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"title":"Parsers.OneOfMany","type":"topic","url":"\/documentation\/parsing\/parsers\/oneofmany","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","title":"Parser Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Parsers","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","role":"symbol","title":"ParserPrinter","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}]}}}