{"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE3mapyAA7ParsersO3MapVy_xqd__Gqd__6OutputQzclF::SYNTHESIZED::s:7Parsing7ParsersO11MapConstantV","extendedModule":"Parsing","role":"symbol","modules":[{"name":"Parsing"}],"title":"map(_:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant\/Parser-Implementations"]]},"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"A parser of transformed outputs."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"inlineContent":[{"text":"A closure that transforms values of this parser’s output.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This method is similar to "},{"type":"codeVoice","code":"Sequence.map"},{"type":"text","text":", "},{"type":"codeVoice","code":"Optional.map"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Result.map"},{"type":"text","text":" in the Swift"},{"type":"text","text":" "},{"type":"text","text":"standard library, as well as "},{"type":"codeVoice","code":"Publisher.map"},{"type":"text","text":" in the Combine framework."}],"type":"paragraph"},{"text":"Printability","anchor":"Printability","level":2,"type":"heading"},{"inlineContent":[{"text":"Mapping a parser with a transform function results in a parser that cannot print. If you need","type":"text"},{"text":" ","type":"text"},{"text":"to transform the output of a parser and retain printability, use the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","isActive":true,"type":"reference"},{"text":"-based","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","isActive":true,"type":"reference"},{"text":" operator instead.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/mapconstant\/map(_:)-ndlj"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant\/map(_:)-ndlj"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion","role":"symbol","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value ","type":"text"},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value back into an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"title":"Conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-18m9d":{"title":"map(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","abstract":[{"type":"text","text":"Returns a parser-printer that transforms the output of this parser with a given conversion."}],"url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"MapConversion","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parsers\/map","role":"symbol","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Map","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","navigatorTitle":[{"text":"Map","kind":"identifier"}],"title":"Parsers.Map"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant/map(_:)-ndlj":{"abstract":[{"text":"Returns a parser that transforms the output of this parser with a given closure.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/mapconstant\/map(_:)-ndlj","role":"symbol","title":"map(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant\/map(_:)-ndlj","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant":{"abstract":[{"type":"text","text":"A parser that replaces another parser’s "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" output with some new output."}],"url":"\/documentation\/parsing\/parsers\/mapconstant","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MapConstant"}],"title":"Parsers.MapConstant","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MapConstant"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/MapConstant/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/MapConstant\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/mapconstant\/parser-implementations","title":"Parser Implementations","kind":"article","role":"collectionGroup","abstract":[],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers"}}}