{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"variants":[{"paths":["\/documentation\/parsing\/parsers\/uuidparser\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/print(_:into:)"],"generated":true,"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser"]]},"metadata":{"modules":[{"name":"Parsing"}],"role":"collectionGroup","title":"ParserPrinter Implementations"},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/print(_:into:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser\/print(_:into:)","role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Input.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/print(_:into:)","title":"print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:10Foundation4UUIDV","text":"UUID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"type":"topic","url":"\/documentation\/parsing\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","kind":"symbol","title":"Parsers.UUIDParser","abstract":[{"text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/uuidparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/eraseToAnyParserPrinter()":{"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser\/erasetoanyparserprinter()","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/eraseToAnyParserPrinter()","title":"eraseToAnyParserPrinter()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser/print(_:)":{"abstract":[{"text":"Attempts to print a well-structured piece of data to something more nebulous.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/uuidparser\/print(_:)","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser\/print(_:)","title":"print(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic","url":"\/documentation\/parsing"}}}