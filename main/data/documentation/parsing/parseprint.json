{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"An entry to ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference"},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ParserPrinters"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13ParserPrinterP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","kind":"typeIdentifier","text":"ParserPrinter"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although you can build printers with the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"reference","isActive":true},{"type":"text","text":" entry point, as long as everything in the"},{"type":"text","text":" "},{"type":"text","text":"builder context is a printer, it doesn’t proper connote its intentions. By using "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"you can make your intentions clearer:"}]},{"code":["let welcoming = ParsePrint {","  \"Hello \"","  Int.parser()","  \"!\"","}","","try welcoming.parse(\"Hello 42!\") \/\/ 42","try welcoming.print(1729) \/\/ \"Hello 1729\""],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","isActive":true},{"type":"text","text":" entry point can also help you catch errors earlier if you accidentally use"},{"type":"text","text":" "},{"type":"text","text":"an operator that is not printer-friendly:"}]},{"code":["let welcoming = ParsePrint {","  \"Hello \"","  Prefix { $0 != \"!\" }.map(String.init)","  \"!\"","}"],"syntax":"swift","type":"codeListing"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generic struct "},{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" requires that "},{"type":"codeVoice","code":"Parsers.Map<Prefix<Substring>, String>"},{"type":"text","text":" conform"},{"type":"text","text":" "},{"type":"text","text":"to "},{"type":"codeVoice","code":"ParserPrinter"}]}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ParsePrint"},{"type":"text","text":" is a type alias for the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse"},{"type":"text","text":" parser with its underlying parser constrained to"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"type":"text","text":"."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/parsing\/parseprint"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Structure","navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}],"role":"symbol","title":"ParsePrint","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"externalID":"s:7Parsing10ParsePrintV","modules":[{"name":"Parsing"}],"symbolKind":"struct"},"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"]}],"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parserPrinters":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parserPrinters","title":"parserPrinters","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parserPrinters"},{"text":": ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"}],"url":"\/documentation\/parsing\/parseprint\/parserprinters","abstract":[],"kind":"symbol","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"type":"topic","title":"ParsePrint","role":"symbol","url":"\/documentation\/parsing\/parseprint","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParsePrint"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","abstract":[{"text":"An entry to ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"reference","isActive":true},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParsePrint"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/print(_:into:)":{"url":"\/documentation\/parsing\/parseprint\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"title":"print(_:into:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/parseprint\/parserprinter-implementations","abstract":[],"title":"ParserPrinter Implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/ParserPrinter-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"role":"symbol","title":"ParserPrinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parse"}],"role":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"title":"Parse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parse"}],"type":"topic","url":"\/documentation\/parsing\/parse"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-4k2am":{"url":"\/documentation\/parsing\/parseprint\/init(_:with:)-4k2am","abstract":[],"title":"init(_:with:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-4k2am"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/Parser-Implementations":{"type":"topic","title":"Parser Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/parseprint\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"role":"symbol","abstract":[{"text":"Declares a type that can incrementally parse an ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"title":"Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"type":"topic","url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"title":"Parsing","type":"topic","url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(with:)":{"url":"\/documentation\/parsing\/parseprint\/init(with:)","title":"init(with:)","kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"ParserPrinters"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(with:)"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserBuilder"}],"role":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"title":"ParserBuilder","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserBuilder"}],"type":"topic","url":"\/documentation\/parsing\/parserbuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/init(_:with:)-8nbrc":{"url":"\/documentation\/parsing\/parseprint\/init(_:with:)-8nbrc","abstract":[],"title":"init(_:with:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Upstream","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/init(_:with:)-8nbrc"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/parse(_:)":{"url":"\/documentation\/parsing\/parseprint\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"title":"parse(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"ParserPrinters","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/parse(_:)"}}}