{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/utf8-6b1as","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":2},"sections":[],"abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/conditional\/utf8-6b1as"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"utf8"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","text":"SubstringToUTF8View"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"metadata":{"roleHeading":"Instance Property","title":"utf8","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","text":"SubstringToUTF8View","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6ParserPAASs5InputRtzrlE4utf8AA7ParsersO19SubstringToUTF8ViewVy_xGvp::SYNTHESIZED::s:7Parsing11ConditionalO","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}]},"extendedModule":"Parsing","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"title":"Conditional","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","kind":"symbol","url":"\/documentation\/parsing\/conditional","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","url":"\/documentation\/parsing","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/Parser-Implementations":{"title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/Parser-Implementations","kind":"article","url":"\/documentation\/parsing\/conditional\/parser-implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","type":"topic","title":"Parsers","url":"\/documentation\/parsing\/parsers","role":"symbol","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUTF8View":{"abstract":[{"text":"A parser that transforms a parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/parsers\/substringtoutf8view","navigatorTitle":[{"kind":"identifier","text":"SubstringToUTF8View"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToUTF8View"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","title":"Parsers.SubstringToUTF8View","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional/utf8-6b1as":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional\/utf8-6b1as","title":"utf8","abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a parser on ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV","text":"SubstringToUTF8View","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/conditional\/utf8-6b1as","type":"topic","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}