{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":2,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")? = nil)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closed range that provides a minimum number and maximum of elements to consume","type":"text"},{"text":" ","type":"text"},{"text":"for parsing to be considered successful.","type":"text"}],"type":"paragraph"}],"name":"length"},{"content":[{"inlineContent":[{"type":"text","text":"An optional closure that takes an element of the input sequence as its argument"},{"type":"text","text":" "},{"type":"text","text":"and returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the element should be included or "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if it should be excluded."},{"type":"text","text":" "},{"type":"text","text":"Once the predicate returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" it will not be called again."}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"syntax":"swift","code":["Prefix(2...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(2...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\"","Prefix(2...4, while: { $0.isNumber }).parse(\"1\")      \/\/ nil"],"type":"codeListing"}],"kind":"content"}],"metadata":{"symbolKind":"init","modules":[{"name":"Parsing"}],"role":"symbol","title":"init(_:while:)","roleHeading":"Initializer","externalID":"s:7Parsing6PrefixV_5whileACyxGSNySiG_Sb7ElementQzcSgtcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ClosedRange","kind":"typeIdentifier","preciseIdentifier":"s:SN"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?)","kind":"text"}]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"role":"symbol","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"topic","title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-x8z4":{"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"title":"init(_:while:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-x8z4","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SN","kind":"typeIdentifier","text":"ClosedRange"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(_:while:)-x8z4"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","url":"\/documentation\/parsing","role":"collection","abstract":[]}}}