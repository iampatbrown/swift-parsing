{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"length","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A partial, inclusive range that provides a maximum number of elements to consume."}],"type":"paragraph"}],"name":"length"},{"content":[{"inlineContent":[{"text":"An optional closure that takes an element of the input sequence as its argument","type":"text"},{"text":" ","type":"text"},{"text":"and returns ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" if the element should be included or ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" if it should be excluded.","type":"text"},{"text":" ","type":"text"},{"text":"Once the predicate returns ","type":"text"},{"code":"false","type":"codeVoice"},{"text":" it will not be called again.","type":"text"}],"type":"paragraph"}],"name":"predicate"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"code":["Prefix(...4, while: { $0.isNumber }).parse(\"123456\") \/\/ \"1234\"","Prefix(...4, while: { $0.isNumber }).parse(\"123\")    \/\/ \"123\""],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"patch":0,"minor":2,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk"},"kind":"symbol","metadata":{"role":"symbol","title":"init(_:while:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"modules":[{"name":"Parsing"}],"roleHeading":"Initializer","symbolKind":"init","externalID":"s:7Parsing6PrefixV_5whileACyxGs19PartialRangeThroughVySiG_Sb7ElementQzcSgtcfc"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-6hhnk":{"abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-6hhnk","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-6hhnk","title":"init(_:while:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s19PartialRangeThroughV","text":"PartialRangeThrough","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"role":"symbol","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"topic","title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","url":"\/documentation\/parsing","role":"collection","abstract":[]}}}