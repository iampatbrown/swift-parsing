{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output"],"title":"Associated Types"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringUUIDParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace"],"title":"Conforming Types","type":"conformingTypes","kind":"relationships"}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"roleHeading":"Protocol","externalID":"s:7Parsing6ParserP","title":"Parser","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"symbolKind":"protocol","modules":[{"name":"Parsing"}]},"variants":[{"paths":["\/documentation\/parsing\/parser"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parser attempts to parse a nebulous piece of data, represented by the "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" associated type,"},{"type":"text","text":" "},{"type":"text","text":"into something more well-structured, represented by the "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" associated type. The parser"},{"type":"text","text":" "},{"type":"text","text":"implements the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","isActive":true,"type":"reference"},{"type":"text","text":" method, which is handed an "},{"code":"inout Input","type":"codeVoice"},{"type":"text","text":", and its job is to"},{"type":"text","text":" "},{"type":"text","text":"turn this into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" if possible, or otherwise return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if it cannot, which represents"},{"type":"text","text":" "},{"type":"text","text":"a parsing failure."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The argument of the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","type":"reference"},{"type":"text","text":" function is "},{"code":"inout","type":"codeVoice"},{"type":"text","text":" because a parser will usually"},{"type":"text","text":" "},{"type":"text","text":"consume some of the input in order to produce an output. For example, we can use the"},{"type":"text","text":" "},{"code":"Int.parser()","type":"codeVoice"},{"type":"text","text":" parser to extract an integer from the beginning of a "},{"code":"UTF8View","type":"codeVoice"},{"type":"text","text":" and consume that"},{"type":"text","text":" "},{"type":"text","text":"portion of the string:"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"123 Hello world\"[...].utf8","let output = Int.parser.parse(&input)","precondition(output == 123)","precondition(input.elementsEqual(\" Hello world\"[...].utf8))"]},{"type":"paragraph","inlineContent":[{"text":"It is best practice for a parser to ","type":"text"},{"inlineContent":[{"text":"not","type":"text"}],"type":"emphasis"},{"text":" consume any of the input if it fails to produce an","type":"text"},{"text":" ","type":"text"},{"text":"output. This allows for “backtracking”, which means if a parser fails then another parser can","type":"text"},{"text":" ","type":"text"},{"text":"try on the original input.","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":2,"major":0,"patch":0},"abstract":[{"text":"Declares a type that can parse an ","type":"text"},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value."}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser/ignoreOutput()":{"title":"ignoreOutput()","type":"topic","abstract":[{"text":"Returns a parser that discards the output of this parser by returning ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" instead.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/ignoreOutput()","url":"\/documentation\/parsing\/parser\/ignoreoutput()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"ignoreOutput"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Skip","preciseIdentifier":"s:7Parsing4SkipV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)":{"abstract":[{"type":"text","text":"Returns a parser that transforms the output of this parser with a given closure."}],"role":"symbol","title":"map(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Map","preciseIdentifier":"s:7Parsing7ParsersO3MapV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/map(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pullback":{"kind":"symbol","navigatorTitle":[{"text":"Pullback","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pullback","title":"Parsers.Pullback","type":"topic","url":"\/documentation\/parsing\/parsers\/pullback","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pullback","kind":"identifier"}],"abstract":[{"type":"text","text":"Transforms the "},{"code":"Input","type":"codeVoice"},{"text":" of a downstream parser.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"url":"\/documentation\/parsing\/rest","kind":"symbol","abstract":[{"text":"A parser that consumes everything to the end of the collection and returns it as its output.","type":"text"}],"title":"Rest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","type":"topic","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"role":"symbol","url":"\/documentation\/parsing\/anyparser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParser"}],"navigatorTitle":[{"kind":"identifier","text":"AnyParser"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","type":"topic","title":"AnyParser","abstract":[{"text":"A type-erased parser of ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" from ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":".","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Output":{"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Output","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/output","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Output","title":"Output","abstract":[{"text":"The kind of values parsed by this parser.","type":"text"}],"required":true},"doc://co.pointfree.Parsing/documentation/Parsing/FirstWhere":{"role":"symbol","url":"\/documentation\/parsing\/firstwhere","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirstWhere"}],"navigatorTitle":[{"kind":"identifier","text":"FirstWhere"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FirstWhere","deprecated":true,"type":"topic","title":"FirstWhere","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Map":{"navigatorTitle":[{"kind":"identifier","text":"Map"}],"title":"Parsers.Map","type":"topic","abstract":[{"text":"A parser that transforms the output of another parser with a given closure.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Map","url":"\/documentation\/parsing\/parsers\/map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/stream":{"abstract":[{"text":"Transforms the receiver parser into one that can parse streams of input.","type":"text"}],"role":"symbol","title":"stream","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"text":".","type":"text"}]},"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/stream","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO6StreamV","text":"Stream","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/orElse(_:)":{"title":"orElse(_:)","kind":"symbol","abstract":[{"type":"text","text":"A parser that runs this parser and, if it fails, runs the given parser."}],"url":"\/documentation\/parsing\/parser\/orelse(_:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"orElse"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5OneOfV","kind":"typeIdentifier","text":"OneOf"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/orElse(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UnicodeScalarViewToUTF8View":{"kind":"symbol","title":"Parsers.UnicodeScalarViewToUTF8View","abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UnicodeScalarViewToUTF8View","url":"\/documentation\/parsing\/parsers\/unicodescalarviewtoutf8view","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnicodeScalarViewToUTF8View"}],"navigatorTitle":[{"kind":"identifier","text":"UnicodeScalarViewToUTF8View"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take6":{"kind":"symbol","navigatorTitle":[{"text":"Take6","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take6","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take6","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take6","title":"Parsers.Take6"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take3":{"navigatorTitle":[{"text":"Take3","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take3","kind":"symbol","title":"Parsers.Take3","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take3","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/take3","abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conditional":{"title":"Conditional","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conditional","kind":"symbol","url":"\/documentation\/parsing\/conditional","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conditional","kind":"identifier"}],"navigatorTitle":[{"text":"Conditional","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that can parse output from two types of parsers."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"abstract":[{"type":"text","text":"A parser that always fails, no matter the input."}],"title":"Fail","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Fail"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Fail"}],"type":"topic","url":"\/documentation\/parsing\/fail","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"kind":"symbol","navigatorTitle":[{"text":"Always","kind":"identifier"}],"url":"\/documentation\/parsing\/always","abstract":[{"text":"A parser that always succeeds by returning the provided value, but does not consume any of its","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","title":"Always"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/compactMap(_:)":{"url":"\/documentation\/parsing\/parser\/compactmap(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compactMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO10CompactMapV","kind":"typeIdentifier","text":"CompactMap"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/compactMap(_:)","abstract":[{"text":"Returns a parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" results of calling the given closure with the"},{"type":"text","text":" "},{"type":"text","text":"output of this parser."}],"role":"symbol","title":"compactMap(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"url":"\/documentation\/parsing\/end","role":"symbol","title":"End","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"navigatorTitle":[{"kind":"identifier","text":"End"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"url":"\/documentation\/parsing\/whitespace","abstract":[{"type":"text","text":"A parser that consumes all ASCII whitespace from the beginning of the input."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","title":"Whitespace"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringDoubleParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringDoubleParser"}],"url":"\/documentation\/parsing\/parsers\/substringdoubleparser","abstract":[{"type":"text","text":"A parser that consumes a double from the beginning of a substring."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringDoubleParser"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringDoubleParser","title":"Parsers.SubstringDoubleParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Stream":{"title":"Parsers.Stream","url":"\/documentation\/parsing\/parsers\/stream","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Stream","kind":"symbol","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/DoubleParser":{"navigatorTitle":[{"kind":"identifier","text":"DoubleParser"}],"title":"Parsers.DoubleParser","abstract":[{"text":"A parser that consumes a double from the beginning of a collection of UTF-8 code units.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/DoubleParser","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleParser"}],"url":"\/documentation\/parsing\/parsers\/doubleparser","role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3thpr":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3thpr","type":"topic","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take4V","kind":"typeIdentifier","text":"Take4"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-3thpr","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take5":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Take5"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take5"}],"url":"\/documentation\/parsing\/parsers\/take5","title":"Parsers.Take5","type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.\\","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take5"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUTF8View":{"abstract":[{"text":"A parser that transforms a parser on ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/parsing\/parsers\/substringtoutf8view","navigatorTitle":[{"kind":"identifier","text":"SubstringToUTF8View"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToUTF8View"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUTF8View","title":"Parsers.SubstringToUTF8View","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-1tosc":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"utf8","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO023UnicodeScalarViewToUTF8E0V","text":"UnicodeScalarViewToUTF8View","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-1tosc","role":"symbol","title":"utf8","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parser\/utf8-1tosc","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipFirst":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipFirst","type":"topic","title":"Parsers.SkipFirst","url":"\/documentation\/parsing\/parsers\/skipfirst","role":"symbol","abstract":[{"type":"text","text":"A parser that runs two parsers, one after the other, taking only the output of the second"},{"type":"text","text":" "},{"type":"text","text":"parser."}],"navigatorTitle":[{"kind":"identifier","text":"SkipFirst"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SkipFirst"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/filter(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/filter(_:)","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/parsing\/parser\/filter(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"filter(_:)","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"type":"topic","role":"symbol","title":"PrefixUpTo","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}],"navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/prefixupto"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take8":{"type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"title":"Parsers.Take8","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take8","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take8","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take8","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Take8","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-9ytif":{"url":"\/documentation\/parsing\/parser\/take(_:)-9ytif","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"text":"G","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take8V","text":"Take8","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-9ytif","title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/flatMap(_:)":{"type":"topic","abstract":[{"text":"Returns a parser that transforms the output of this parser into a new parser.","type":"text"}],"title":"flatMap(_:)","url":"\/documentation\/parsing\/parser\/flatmap(_:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewParser"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"FlatMap","preciseIdentifier":"s:7Parsing7ParsersO7FlatMapV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewParser"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-6f1jr":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-6f1jr","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning both outputs in a"},{"type":"text","text":" "},{"type":"text","text":"tuple."}],"title":"take(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Take2","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO5Take2V"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/take(_:)-6f1jr"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloatParser":{"navigatorTitle":[{"text":"SubstringFloatParser","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloatParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/substringfloatparser","abstract":[{"text":"A parser that consumes a float from the beginning of a substring.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloatParser","title":"Parsers.SubstringFloatParser","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take2":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/take2","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take2"}],"navigatorTitle":[{"kind":"identifier","text":"Take2"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take2","type":"topic","title":"Parsers.Take2","abstract":[{"text":"A parser that runs two parsers, one after the other, and returns both outputs in a tuple.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-226d4":{"url":"\/documentation\/parsing\/parser\/take(_:)-226d4","title":"take(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-226d4","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"text":", ","kind":"text"},{"text":"G","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Take9","preciseIdentifier":"s:7Parsing7ParsersO5Take9V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringFloat80Parser":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringFloat80Parser","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringFloat80Parser","kind":"identifier"}],"navigatorTitle":[{"text":"SubstringFloat80Parser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/substringfloat80parser","title":"Parsers.SubstringFloat80Parser","abstract":[{"type":"text","text":"A parser that consumes a float from the beginning of a substring."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"kind":"symbol","navigatorTitle":[{"text":"Filter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","title":"Parsers.Filter","type":"topic","url":"\/documentation\/parsing\/parsers\/filter","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pullback(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pullback"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewInput"},{"text":">(","kind":"text"},{"text":"WritableKeyPath","preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Pullback","preciseIdentifier":"s:7Parsing7ParsersO8PullbackV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewInput","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Transforms the ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" of a parser."}],"type":"topic","url":"\/documentation\/parsing\/parser\/pullback(_:)","title":"pullback(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pullback(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-3ezb3":{"url":"\/documentation\/parsing\/parser\/take(_:)-3ezb3","type":"topic","role":"symbol","title":"take(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Take3","preciseIdentifier":"s:7Parsing7ParsersO5Take3V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-3ezb3","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take10":{"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take10","kind":"symbol","type":"topic","title":"Parsers.Take10","url":"\/documentation\/parsing\/parsers\/take10","role":"symbol","navigatorTitle":[{"text":"Take10","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take10","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/unicodeScalars":{"title":"unicodeScalars","type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":".","type":"text"}]},"abstract":[{"text":"Transforms the receiving parser on ","type":"text"},{"type":"codeVoice","code":"Substring"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/unicodeScalars","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unicodeScalars","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"SubstringToUnicodeScalars","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO25SubstringToUnicodeScalarsV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parser\/unicodescalars"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-1fw8y":{"url":"\/documentation\/parsing\/parser\/take(_:)-1fw8y","role":"symbol","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, taking only the output of the"},{"type":"text","text":" "},{"type":"text","text":"given parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-1fw8y","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO9SkipFirstV","kind":"typeIdentifier","text":"SkipFirst"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take7":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take7","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take7","kind":"identifier"}],"navigatorTitle":[{"text":"Take7","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/take7","title":"Parsers.Take7","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/BoolParser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/BoolParser","type":"topic","title":"Parsers.BoolParser","url":"\/documentation\/parsing\/parsers\/boolparser","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a collection of UTF-8 code units."}],"navigatorTitle":[{"kind":"identifier","text":"BoolParser"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BoolParser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfMany":{"role":"symbol","url":"\/documentation\/parsing\/oneofmany","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfMany","type":"topic","title":"OneOfMany","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"type":"topic","title":"StartsWith","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"url":"\/documentation\/parsing\/startswith"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SkipSecond":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/skipsecond","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SkipSecond"}],"navigatorTitle":[{"kind":"identifier","text":"SkipSecond"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SkipSecond","type":"topic","title":"Parsers.SkipSecond","abstract":[{"type":"text","text":"A parser that runs two parsers, one after the other, taking only the output of the first"},{"type":"text","text":" "},{"type":"text","text":"parser."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringToUnicodeScalars":{"kind":"symbol","url":"\/documentation\/parsing\/parsers\/substringtounicodescalars","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringToUnicodeScalars","kind":"identifier"}],"title":"Parsers.SubstringToUnicodeScalars","navigatorTitle":[{"text":"SubstringToUnicodeScalars","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringToUnicodeScalars","abstract":[{"type":"text","text":"A parser that transforms a parser on "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" into a parser on"},{"type":"text","text":" "},{"type":"codeVoice","code":"Substring.UnicodeScalarView"},{"type":"text","text":"."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/Input":{"kind":"symbol","url":"\/documentation\/parsing\/parser\/input","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"Input"}],"type":"topic","title":"Input","role":"symbol","required":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/Input","abstract":[{"type":"text","text":"The kind of values this parser receives."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take11":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Take11"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take11","title":"Parsers.Take11","type":"topic","url":"\/documentation\/parsing\/parsers\/take11","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take11"}],"abstract":[{"type":"text","text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"navigatorTitle":[{"kind":"identifier","text":"Lazy"}],"title":"Lazy","type":"topic","abstract":[{"type":"text","text":"A parser that waits for a call to its "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true},{"type":"text","text":" method before running the given closure to"},{"type":"text","text":" "},{"type":"text","text":"create a parser for the given input."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","url":"\/documentation\/parsing\/lazy","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/skip(_:)":{"abstract":[{"text":"Returns a parser that runs this parser and the given parser, taking only the output of this","type":"text"},{"text":" ","type":"text"},{"text":"parser.","type":"text"}],"title":"skip(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/skip(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"skip","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SkipSecond","preciseIdentifier":"s:7Parsing7ParsersO10SkipSecondV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/parser\/skip(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5wm45":{"abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5wm45","url":"\/documentation\/parsing\/parser\/take(_:)-5wm45","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"F","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take7V","kind":"typeIdentifier","text":"Take7"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol","title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","url":"\/documentation\/parsing\/newline","kind":"symbol","abstract":[{"text":"A parser that consumes a single newline from the beginning of the input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"title":"Newline"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-74wwn":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"take"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"B","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"D","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO5Take6V","text":"Take6","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-74wwn","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"kind":"symbol","url":"\/documentation\/parsing\/parser\/take(_:)-74wwn","title":"take(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5a47k":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"text":", ","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"J"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6Take11V","kind":"typeIdentifier","text":"Take11"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"F","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"G","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"H","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"J","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-5a47k","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5a47k","role":"symbol","abstract":[{"text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs","type":"text"},{"text":" ","type":"text"},{"text":"and the given parser’s output in a flattened tuple.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CompactMap":{"title":"Parsers.CompactMap","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"A parser that outputs the non-","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" results of calling the given transformation with the","type":"text"},{"text":" ","type":"text"},{"text":"output of its upstream parser.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/compactmap","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CompactMap","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactMap","kind":"identifier"}],"navigatorTitle":[{"text":"CompactMap","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FloatParser":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/floatparser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FloatParser","title":"Parsers.FloatParser","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatParser"}],"abstract":[{"text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FloatParser"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/IntParser":{"kind":"symbol","navigatorTitle":[{"text":"IntParser","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/intparser","abstract":[{"type":"text","text":"A parser that consumes an integer (with an optional leading "},{"code":"+","type":"codeVoice"},{"type":"text","text":" or "},{"code":"-","type":"codeVoice"},{"type":"text","text":" sign) from the"},{"type":"text","text":" "},{"type":"text","text":"beginning of a collection of UTF8 code units."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IntParser","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/IntParser","title":"Parsers.IntParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringBoolParser":{"title":"Parsers.SubstringBoolParser","url":"\/documentation\/parsing\/parsers\/substringboolparser","abstract":[{"type":"text","text":"A parser that consumes a Boolean value from the beginning of a substring."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringBoolParser","kind":"symbol","navigatorTitle":[{"text":"SubstringBoolParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringBoolParser","kind":"identifier"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Float80Parser":{"title":"Parsers.Float80Parser","abstract":[{"text":"A parser that consumes a float from the beginning of a collection of UTF-8 code units.","type":"text"}],"navigatorTitle":[{"text":"Float80Parser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Float80Parser","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Float80Parser","url":"\/documentation\/parsing\/parsers\/float80parser","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/UUIDParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UUIDParser"}],"url":"\/documentation\/parsing\/parsers\/uuidparser","abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a collection of UTF8 code units."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UUIDParser"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/UUIDParser","title":"Parsers.UUIDParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"title":"Skip","url":"\/documentation\/parsing\/skip","navigatorTitle":[{"kind":"identifier","text":"Skip"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"}]},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"First"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"First"}],"url":"\/documentation\/parsing\/first","title":"First","type":"topic","abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/pipe(_:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/pipe(_:)","title":"pipe(_:)","url":"\/documentation\/parsing\/parser\/pipe(_:)","abstract":[{"type":"text","text":"Returns a parser that runs this parser, pipes its output into the given parser, and returns"},{"type":"text","text":" "},{"type":"text","text":"the output of the given parser."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pipe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Downstream","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Downstream","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO4PipeV","text":"Pipe","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Downstream"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/FlatMap":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FlatMap"}],"abstract":[{"text":"A parser that transforms the output of another parser into a new parser.","type":"text"}],"title":"Parsers.FlatMap","url":"\/documentation\/parsing\/parsers\/flatmap","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/FlatMap","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FlatMap"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"title":"parse(_:)","type":"topic","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-fbhx":{"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-fbhx","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"take","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"E"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"F"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"H"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6Take10V","kind":"typeIdentifier","text":"Take10"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"B"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"F"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"H"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-fbhx"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/take(_:)-5qnt6":{"type":"topic","abstract":[{"type":"text","text":"Returns a parser that runs this parser and the given parser, returning this parser’s outputs"},{"type":"text","text":" "},{"type":"text","text":"and the given parser’s output in a flattened tuple."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/take(_:)-5qnt6","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"take"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"B"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"C"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"D"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO5Take5V","kind":"typeIdentifier","text":"Take5"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"B","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"D","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"take(_:)","url":"\/documentation\/parsing\/parser\/take(_:)-5qnt6","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringUUIDParser":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringUUIDParser"}],"url":"\/documentation\/parsing\/parsers\/substringuuidparser","abstract":[{"type":"text","text":"A parser that consumes a UUID from the beginning of a substring using a UTF-8 parser."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringUUIDParser"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringUUIDParser","title":"Parsers.SubstringUUIDParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","title":"Parser","url":"\/documentation\/parsing\/parser","role":"symbol","abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"navigatorTitle":[{"kind":"identifier","text":"Parser"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take4":{"type":"topic","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}],"title":"Parsers.Take4","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Take4","kind":"identifier"}],"url":"\/documentation\/parsing\/parsers\/take4","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take4","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Take4","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/SubstringIntParser":{"title":"Parsers.SubstringIntParser","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/SubstringIntParser","kind":"symbol","url":"\/documentation\/parsing\/parsers\/substringintparser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringIntParser","kind":"identifier"}],"navigatorTitle":[{"text":"SubstringIntParser","kind":"identifier"}],"abstract":[{"text":"A parser that consumes an integer (with an optional leading ","type":"text"},{"code":"+","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"-","type":"codeVoice"},{"text":" sign) from the","type":"text"},{"text":" ","type":"text"},{"text":"beginning of a substring using a UTF-8 parser.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Pipe":{"title":"Parsers.Pipe","url":"\/documentation\/parsing\/parsers\/pipe","abstract":[{"type":"text","text":"A parser that runs this parser, pipes its output into the given parser, and returns the output"},{"type":"text","text":" "},{"type":"text","text":"of the given parser."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Pipe","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Pipe"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pipe"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","type":"topic","title":"Parsing","url":"\/documentation\/parsing","role":"collection","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","url":"\/documentation\/parsing\/many","kind":"symbol","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"of the outputs."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"title":"Many"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/parse(_:)-4u8o0":{"kind":"symbol","required":true,"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/parse(_:)-4u8o0","url":"\/documentation\/parsing\/parser\/parse(_:)-4u8o0","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"defaultImplementations":5,"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured."}],"title":"parse(_:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOf":{"url":"\/documentation\/parsing\/parsers\/oneof","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"abstract":[{"text":"A parser that runs the first parser and, if it fails, runs the second parser.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOf"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOf","title":"Parsers.OneOf"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"role":"symbol","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","type":"topic","title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}],"url":"\/documentation\/parsing\/prefixthrough","type":"topic","title":"PrefixThrough","role":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Take9":{"role":"symbol","url":"\/documentation\/parsing\/parsers\/take9","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Take9"}],"navigatorTitle":[{"kind":"identifier","text":"Take9"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Take9","type":"topic","title":"Parsers.Take9","abstract":[{"text":"A parser that runs a parser of a tuple of outputs and another parser, one after the other,","type":"text"},{"text":" ","type":"text"},{"text":"and returns a flattened tuple of the first parser’s outputs and the second parser’s output.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/eraseToAnyParser()":{"url":"\/documentation\/parsing\/parser\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/eraseToAnyParser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing9AnyParserV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"title":"eraseToAnyParser()","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalParser":{"url":"\/documentation\/parsing\/parsers\/optionalparser","kind":"symbol","abstract":[{"text":"A parser that parses ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" when its upstream parser fails.","type":"text"}],"title":"Parsers.OptionalParser","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalParser","type":"topic","navigatorTitle":[{"text":"OptionalParser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/utf8-6e25a":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"utf8"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"text":"SubstringToUTF8View","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO19SubstringToUTF8ViewV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"url":"\/documentation\/parsing\/parser\/utf8-6e25a","abstract":[{"type":"text","text":"Transforms the receiving parser on "},{"code":"Substring","type":"codeVoice"},{"text":" into a parser on ","type":"text"},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/utf8-6e25a","title":"utf8","type":"topic","role":"symbol"}}}