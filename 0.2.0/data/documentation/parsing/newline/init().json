{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline\/init()"]}],"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","roleHeading":"Initializer","externalID":"s:7Parsing7NewlineVACyxGycfc","symbolKind":"init"},"sections":[],"abstract":[{"type":"text","text":"No overview available."}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline"]]},"schemaVersion":{"patch":0,"minor":2,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","kind":"symbol","abstract":[],"url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline/init()":{"kind":"symbol","role":"symbol","abstract":[],"title":"init()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline\/init()","url":"\/documentation\/parsing\/newline\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"Newline","navigatorTitle":[{"text":"Newline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","url":"\/documentation\/parsing\/newline","abstract":[{"type":"text","text":"A parser that consumes a single newline from the beginning of the input."}]}}}