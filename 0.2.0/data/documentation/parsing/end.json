{"abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"End"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"syntax":"swift","type":"codeListing","code":["End<Substring>().parse(\"\"[...]) \/\/ (output: (), rest: \"\")","End<Substring>().parse(\"Hello\"[...]) \/\/ (output: nil, rest: \"Hello\")"]}]}],"metadata":{"symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"externalID":"s:7Parsing3EndV","navigatorTitle":[{"text":"End","kind":"identifier"}],"modules":[{"name":"Parsing"}],"role":"symbol","roleHeading":"Structure","title":"End"},"schemaVersion":{"patch":0,"minor":2,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","title":"Conforms To"}],"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations"],"title":"Default Implementations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","title":"Parsing","kind":"symbol","abstract":[],"url":"\/documentation\/parsing"},"doc://co.pointfree.Parsing/documentation/Parsing/End/init()":{"title":"init()","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/init()","type":"topic","url":"\/documentation\/parsing\/end\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","title":"Parser","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"abstract":[{"type":"text","text":"Declares a type that can parse an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value into an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value."}],"url":"\/documentation\/parsing\/parser","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Parser"}]},"doc://co.pointfree.Parsing/documentation/Parsing/End/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/Parser-Implementations","url":"\/documentation\/parsing\/end\/parser-implementations","title":"Parser Implementations","kind":"article","type":"topic","role":"collectionGroup","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/End/parse(_:)":{"title":"parse(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/parsing\/end\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured.","type":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}],"type":"topic","kind":"symbol","role":"symbol","title":"End","navigatorTitle":[{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}]}}}